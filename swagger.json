{
  "openapi": "3.0.3",
  "info": {
    "title": "PAL - OpenAPI 3.0",
    "description": "This is a sample Personal Assistent Server based on the OpenAPI 3.0 specification.\n\nSome useful links:\n- [PAL repository](https://github.com)",
    "contact": {
      "email": "ayamahmoudd183@gmail.com"
    },
    "version": "1.0.0"
  },
  "externalDocs": {
    "description": "Find out more about Anees",
    "url": "http://PALURL"
  },
  "servers": [
    {
      "url": "http://localhost:3000/api/"
    }
  ],
  "tags": [
    {
      "name": "User",
      "description": "Operations about user"
    },
    {
      "name": "Lists",
      "description": "Operations about lists"
    },
    {
      "name": "Tasks",
      "description": "Operations about tasks"
    },
    {
      "name": "Diaries or Notes",
      "description": "opreation about diary or note"
    }
  ],
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "tags": ["User"],
        "summary": "Create user acoount",
        "requestBody": {
          "description": "Created user object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/signup"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "User already exists"
          },
          "500": {
            "description": "Server error"
          },
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["User"],
        "summary": "Logs user into Anees",
        "requestBody": {
          "description": "Login to your accout",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/login"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation."
          },
          "401": {
            "description": "Invalid email or Invalid password"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/lists/createList": {
      "post": {
        "tags": ["Lists"],
        "summary": "Create new list",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateList"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successfully retrieved"
          },
          "400": {
            "description": "Invalid name, can't be empty"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/lists/getLists": {
      "get": {
        "tags": ["Lists"],
        "summary": "Get all lists",
        "responses": {
          "200": {
            "description": "successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetList"
                }
              }
            }
          },
          "401": {
            "description": "Server error"
          }
        }
      }
    },
    "/lists/getList/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "tags": ["Lists"],
        "summary": "Get list with id",
        "responses": {
          "404": {
            "description": "List not found"
          },
          "500": {
            "description": "Server error"
          },
          "default": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetList"
                }
              }
            }
          }
        }
      }
    },
    "/lists/updateList/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "tags": ["Lists"],
        "summary": "Update list with id",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateList"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated list",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateList"
                }
              }
            }
          },
          "404": {
            "description": "List not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/lists/deleteList/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "delete": {
        "tags": ["Lists"],
        "summary": "Delete list with id",
        "responses": {
          "204": {
            "description": "successfully deleted List"
          },
          "401": {
            "description": "Server error"
          },
          "404": {
            "description": "List not found"
          }
        }
      }
    },
    "/tasks/addTask/{list-id}": {
      "parameters": [
        {
          "name": "list-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "tags": ["Tasks"],
        "summary": "Create new Task",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddTask"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Task successfully added"
          },
          "404": {
            "description": "List not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/tasks/getTasks/{list-id}": {
      "parameters": [
        {
          "name": "list-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "tags": ["Tasks"],
        "summary": "Get all Tasks",
        "responses": {
          "200": {
            "description": "tasks successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetList"
                }
              }
            }
          },
          "404": {
            "description": "List not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/tasks/getTask/{list-id}/{task-id}": {
      "parameters": [
        {
          "name": "list-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "task-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "tags": ["Tasks"],
        "summary": "Get one task",
        "responses": {
          "404": {
            "description": "List not found or Task not found"
          },
          "500": {
            "description": "Server error"
          },
          "default": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddTask"
                }
              }
            }
          }
        }
      }
    },
    "/tasks/updateTask/{list-id}/{task-id}": {
      "parameters": [
        {
          "name": "list-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "task-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "tags": ["Tasks"],
        "summary": "Update Task",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddTask"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "List not found or Task not found"
          },
          "500": {
            "description": "Server error"
          },
          "default": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddTask"
                }
              }
            }
          }
        }
      }
    },
    "/tasks/deleteTask/{list-id}/{task-id}": {
      "parameters": [
        {
          "name": "list-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "task-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "delete": {
        "tags": ["Tasks"],
        "summary": "Delete Task",
        "responses": {
          "200": {
            "description": "Task deleted successfully"
          },
          "404": {
            "description": "List not found or Task not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/diaries": {
      "post": {
        "tags": ["Diaries or Notes"],
        "summary": "Create new diary or note",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiaryOrNote"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successfully retrieved"
          },
          "500": {
            "description": "Error"
          }
        }
      },
      "get": {
        "tags": ["Diaries or Notes"],
        "summary": "Get all diaries or notes",
        "responses": {
          "200": {
            "description": "successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiaryOrNote"
                }
              }
            }
          },
          "500": {
            "description": "Error"
          }
        }
      }
    },
    "/diaries/{diary-id}": {
      "parameters": [
        {
          "name": "diary-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "tags": ["Diaries or Notes"],
        "summary": "Get diary or note with id",
        "responses": {
          "200": {
            "description": "successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiaryOrNote"
                }
              }
            }
          },
          "404": {
            "description": "diary or note not found"
          },
          "500": {
            "description": "Error"
          }
        }
      },
      "delete": {
        "tags": ["Diaries or Notes"],
        "summary": "Delete diary or note with id",
        "responses": {
          "204": {
            "description": "successfully deleted List"
          },
          "404": {
            "description": "diary or note not found"
          },
          "500": {
            "description": "Error"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "signup": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "john"
          },
          "email": {
            "type": "string",
            "example": "john@email.com"
          },
          "password": {
            "type": "string",
            "minLength": 8,
            "example": "12345678"
          }
        }
      },
      "login": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "john@email.com"
          },
          "password": {
            "type": "string",
            "example": "123456789"
          }
        }
      },
      "CreateList": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "list"
          },
          "color": {
            "type": "string",
            "example": "#ffffff"
          },
          "fav": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "GetList": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "list 1"
          },
          "color": {
            "type": "string",
            "example": "#ffffff"
          },
          "tasks": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "task1"
                },
                "taskupdatedAt": {
                  "type": "string",
                  "format": "date"
                }
              }
            }
          }
        }
      },
      "AddTask": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "task-name"
          },
          "description": {
            "type": "string",
            "example": "any describe"
          },
          "dueDate": {
            "type": "string",
            "format": "date"
          },
          "priority": {
            "type": "string",
            "default": ["low", "medium", "high"]
          },
          "fav": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "DiaryOrNote": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "dairy-name or note-name"
          },
          "content": {
            "type": "string",
            "example": "any content"
          }
        }
      }
    }
  }
}
